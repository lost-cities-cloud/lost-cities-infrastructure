version: '2'
services:
  nginx:
    build:
      context: ./nginx
    environment:
      #- NGINX_HOST=lostcities.com
      - NGINX_PORT=80
    #volumes:
    #  - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - accounts
      - matches
      - frontend
  frontend:
    container_name: frontend
    build:
      context: ../lostcities-frontend
    volumes:
      - ../lostcities-frontend:/usr/src/lostcities
  accounts:
    build:
      context: ../lostcities-accounts
    working_dir: /accounts
    environment:
      GRADLE_USER_HOME: /var/lib/gradle
      GRADLE_OPTS: -Dorg.gradle.project.buildDir=/tmp/gradle-build
      SPRING_PROFILES_ACTIVE: ${PROFILE}
    ports:
      - "5007:5005"
    volumes:
      - ../lostcities-accounts:/accounts
      - ../lostcities-common:/lostcities-common
    depends_on:
      - accounts-database
  matches:
    build:
      context: ../lostcities-matches
    working_dir: /matches
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
    ports:
      - "5006:5005"
    volumes:
      - ../lostcities-matches:/matches
      - ../lostcities-common:/lostcities-common
    depends_on:
      - kafka
      - accounts-database
  accounts-database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: accounts
      POSTGRES_PASSWORD: example
      POSTGRES_DB: lostcities-accounts
      PGDATA: /var/lib/postgresql/data/accounts
    ports:
      - "5432:5432"
    expose:
      - 5432
  matches-database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: matches
      POSTGRES_PASSWORD: example
      POSTGRES_DB: lostcities-matches
      PGDATA: /var/lib/postgresql/data/accounts
    ports:
      - "5431:5432"
    expose:
      - 5432
  kafka:
    image: wurstmeister/kafka
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "create-game-topic:1:1" #,command-job-topic:1:1,game-change-notification-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock